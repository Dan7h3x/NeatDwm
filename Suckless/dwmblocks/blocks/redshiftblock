#!/usr/bin/env bash

# Color definitions
RED="#FF3131"
PURPLE="#9457EB"
GREEN="#39FF14"
BLUE="#4D4DFF"
LIGHT_BLUE="#89CFF0"
ORANGE="#F6890A"
YELLOW="#CCFF00"
CYAN="#00FEFC"
TEAL="#43BBB6"
BLACK="#000000"

# Configuration
TEMP_STEP=200
DEFAULT_TEMP=4500
MIN_TEMP=1000
MAX_TEMP=10000
STATE_FILE="/tmp/redshift_temp"

# Initialize or read current temperature from state file
if [ -f "$STATE_FILE" ]; then
  current_temp=$(cat "$STATE_FILE")
else
  current_temp=$DEFAULT_TEMP
  echo "$current_temp" >"$STATE_FILE"
fi

# Helper function to validate and save temperature
validate_and_save_temp() {
  if [ "$current_temp" -lt "$MIN_TEMP" ]; then
    current_temp=$MIN_TEMP
  elif [ "$current_temp" -gt "$MAX_TEMP" ]; then
    current_temp=$MAX_TEMP
  fi
  echo "$current_temp" >"$STATE_FILE"
}

# Helper function to apply temperature
apply_temp() {
  redshift -P -O "$current_temp" &>/dev/null
}

stop() {
  redshift -x &>/dev/null
  current_temp=$DEFAULT_TEMP
  echo "$current_temp" >"$STATE_FILE"
}

start() {
  current_temp=$DEFAULT_TEMP
  echo "$current_temp" >"$STATE_FILE"
  apply_temp
}

increase() {
  current_temp=$((current_temp + TEMP_STEP))
  validate_and_save_temp
  apply_temp
}

decrease() {
  current_temp=$((current_temp - TEMP_STEP))
  validate_and_save_temp
  apply_temp
}

# Determine icon based on temperature
if [ "$current_temp" -gt "$DEFAULT_TEMP" ]; then
  icon="󰃞 "
elif [ "$current_temp" -lt "$DEFAULT_TEMP" ]; then
  icon="󰃜 "
else
  icon="󰃟 "
fi

# Output current status
echo -e "^c$BLACK^^b$YELLOW^$icon$(current_temp)K^d^"

# Handle button events
case "$BLOCK_BUTTON" in
1) start ;;    # Left click
3) stop ;;     # Right click
4) increase ;; # Scroll up
5) decrease ;; # Scroll down
esac
